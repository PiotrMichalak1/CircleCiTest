# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

executors:
   node-cypress:
      docker:
         - image: "cypress/browsers:node16.14.0-chrome99-ff97"

orbs:
   # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
   # Orbs reduce the amount of configuration required for common tasks.
   # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
   node: circleci/node@5
   cypress: cypress-io/cypress@2.1.0

jobs:
build:
   working_directory: /tmp
   steps:
      - run:
           name: Creating Dummy Artifacts
           command: |
              echo "my artifact file" > /tmp/art-1;
              mkdir /tmp/artifacts;
              echo "my artifact files in a dir" > /tmp/artifacts/art-2;
      - store_artifacts:
           path: /tmp/art-1
           destination: artifact-file
      - store_artifacts:
           path: /tmp/artifacts
   # Below is the definition of your job to test your Node app. You can rename and customize it as you want.
   build:
      docker:
         - image: cimg/node:16.16

      working_directory: /tmp
      steps:
         - checkout
         - node/install-packages:
              pkg-manager: "yarn"
         - run:
              command: yarn run build
         - run:
              command: |
                 mkdir -p /tmp/artifacts
                 cp -r dist /tmp/artifacts

workflows:
   # Below is the definition of your workflow.
   # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
   # CircleCI will run this workflow on every commit.
   # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
   sample:
      jobs:
         - test
         - cypress/run:
              executor: "node-cypress"
              command: yarn run test:e2e --headless
              yarn: true
         # For running simple node tests, you could optionally instead use the node/test job from the orb to replicate and replace the manually defined "test" job above in fewer lines.
         # - node/test
